<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.hchier.hzone.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="xyz.hchier.hzone.entity.Blog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="publisher" jdbcType="VARCHAR" property="publisher"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="favor_num" jdbcType="INTEGER" property="favorNum"/>
        <result column="comment_num" jdbcType="INTEGER" property="commentNum"/>
        <result column="self_visible" jdbcType="BIT" property="selfVisible"/>
        <result column="hidden" jdbcType="BIT" property="hidden"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="tags" jdbcType="LONGVARCHAR" property="tags"/>
    </resultMap>
    <delete id="delete" parameterType="xyz.hchier.hzone.entity.Blog">
        delete
        from blog
        where id = #{id,jdbcType=INTEGER}
          and publisher = #{publisher}
    </delete>
    <insert id="insert" parameterType="xyz.hchier.hzone.entity.Blog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into blog (
        publisher,
        title,
        content,
        self_visible,
        update_time,
        tags
        )
        values (
        #{publisher,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{content,jdbcType=VARCHAR},
        #{selfVisible,jdbcType=BIT},
        #{updateTime,jdbcType=TIMESTAMP},
        #{tags,jdbcType=LONGVARCHAR}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="xyz.hchier.hzone.entity.Blog">
        update blog
        <set>
            <if test="title != null">title = #{title,jdbcType=VARCHAR},</if>
            <if test="content != null">content = #{content,jdbcType=VARCHAR},</if>
            <if test="selfVisible != null">self_visible = #{selfVisible,jdbcType=BIT},</if>
            <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if>
            <if test="tags != null">tags = #{tags,jdbcType=LONGVARCHAR}</if>
        </set>
        where id = #{id,jdbcType=INTEGER} and publisher = #{publisher}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               publisher,
               title,
               content,
               favor_num,
               comment_num,
               self_visible,
               hidden,
               update_time,
               tags
        from blog
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAllIdAndUsername" resultMap="BaseResultMap">
        select id,
               publisher
        from blog
    </select>
    <select id="selectUsernameById" parameterType="java.lang.Integer" resultType="java.lang.String">
        select publisher
        from blog
        where id = #{id}
    </select>
    <select id="selectBlogFavorNumById" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select favor_num
        from blog
        where id = #{id}
    </select>
    <update id="multiUpdateBlogFavorNum">
        update blog
        set favor_num = CASE id
        <foreach collection="blogList" open="" separator=" " close="" item="blog">
            when #{blog.id} then #{blog.favorNum}
        </foreach>
        END
        where id in
        <foreach collection="blogList" item="blog" open="(" separator="," close=")">
            #{blog.id}
        </foreach>
    </update>
    <select id="selectRandom" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT *
        FROM blog
        ORDER BY RAND() limit #{size}
    </select>
    <update id="incrCommentNum" parameterType="java.lang.Integer">
        update blog set comment_num = comment_num + 1 where id = #{blogId}
    </update>
</mapper>